/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package romanow.abc.exam.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import romanow.abc.exam.model.MessageBean;
import romanow.abc.exam.model.PageableObject;
import romanow.abc.exam.model.Sort;

/**
 * PageMessageBean
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.java.JavaClientCodegen", date = "2022-04-21T22:55:51.541+07:00[Asia/Novosibirsk]")
public class PageMessageBean {

  @SerializedName("totalElements")
  private Long totalElements = null;
  
  @SerializedName("totalPages")
  private Integer totalPages = null;
  
  @SerializedName("number")
  private Integer number = null;
  
  @SerializedName("sort")
  private Sort sort = null;
  
  @SerializedName("size")
  private Integer size = null;
  
  @SerializedName("content")
  private List<MessageBean> content = null;
  
  @SerializedName("pageable")
  private PageableObject pageable = null;
  
  @SerializedName("first")
  private Boolean first = null;
  
  @SerializedName("last")
  private Boolean last = null;
  
  @SerializedName("numberOfElements")
  private Integer numberOfElements = null;
  
  @SerializedName("empty")
  private Boolean empty = null;
  
  public PageMessageBean totalElements(Long totalElements) {
    this.totalElements = totalElements;
    return this;
  }

  
  /**
  * Get totalElements
  * @return totalElements
  **/
  @ApiModelProperty(value = "")
  public Long getTotalElements() {
    return totalElements;
  }
  public void setTotalElements(Long totalElements) {
    this.totalElements = totalElements;
  }
  
  public PageMessageBean totalPages(Integer totalPages) {
    this.totalPages = totalPages;
    return this;
  }

  
  /**
  * Get totalPages
  * @return totalPages
  **/
  @ApiModelProperty(value = "")
  public Integer getTotalPages() {
    return totalPages;
  }
  public void setTotalPages(Integer totalPages) {
    this.totalPages = totalPages;
  }
  
  public PageMessageBean number(Integer number) {
    this.number = number;
    return this;
  }

  
  /**
  * Get number
  * @return number
  **/
  @ApiModelProperty(value = "")
  public Integer getNumber() {
    return number;
  }
  public void setNumber(Integer number) {
    this.number = number;
  }
  
  public PageMessageBean sort(Sort sort) {
    this.sort = sort;
    return this;
  }

  
  /**
  * Get sort
  * @return sort
  **/
  @ApiModelProperty(value = "")
  public Sort getSort() {
    return sort;
  }
  public void setSort(Sort sort) {
    this.sort = sort;
  }
  
  public PageMessageBean size(Integer size) {
    this.size = size;
    return this;
  }

  
  /**
  * Get size
  * @return size
  **/
  @ApiModelProperty(value = "")
  public Integer getSize() {
    return size;
  }
  public void setSize(Integer size) {
    this.size = size;
  }
  
  public PageMessageBean content(List<MessageBean> content) {
    this.content = content;
    return this;
  }

  public PageMessageBean addContentItem(MessageBean contentItem) {
    
    if (this.content == null) {
      this.content = new ArrayList<MessageBean>();
    }
    
    this.content.add(contentItem);
    return this;
  }
  
  /**
  * Get content
  * @return content
  **/
  @ApiModelProperty(value = "")
  public List<MessageBean> getContent() {
    return content;
  }
  public void setContent(List<MessageBean> content) {
    this.content = content;
  }
  
  public PageMessageBean pageable(PageableObject pageable) {
    this.pageable = pageable;
    return this;
  }

  
  /**
  * Get pageable
  * @return pageable
  **/
  @ApiModelProperty(value = "")
  public PageableObject getPageable() {
    return pageable;
  }
  public void setPageable(PageableObject pageable) {
    this.pageable = pageable;
  }
  
  public PageMessageBean first(Boolean first) {
    this.first = first;
    return this;
  }

  
  /**
  * Get first
  * @return first
  **/
  @ApiModelProperty(value = "")
  public Boolean isFirst() {
    return first;
  }
  public void setFirst(Boolean first) {
    this.first = first;
  }
  
  public PageMessageBean last(Boolean last) {
    this.last = last;
    return this;
  }

  
  /**
  * Get last
  * @return last
  **/
  @ApiModelProperty(value = "")
  public Boolean isLast() {
    return last;
  }
  public void setLast(Boolean last) {
    this.last = last;
  }
  
  public PageMessageBean numberOfElements(Integer numberOfElements) {
    this.numberOfElements = numberOfElements;
    return this;
  }

  
  /**
  * Get numberOfElements
  * @return numberOfElements
  **/
  @ApiModelProperty(value = "")
  public Integer getNumberOfElements() {
    return numberOfElements;
  }
  public void setNumberOfElements(Integer numberOfElements) {
    this.numberOfElements = numberOfElements;
  }
  
  public PageMessageBean empty(Boolean empty) {
    this.empty = empty;
    return this;
  }

  
  /**
  * Get empty
  * @return empty
  **/
  @ApiModelProperty(value = "")
  public Boolean isEmpty() {
    return empty;
  }
  public void setEmpty(Boolean empty) {
    this.empty = empty;
  }
  
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PageMessageBean pageMessageBean = (PageMessageBean) o;
    return Objects.equals(this.totalElements, pageMessageBean.totalElements) &&
        Objects.equals(this.totalPages, pageMessageBean.totalPages) &&
        Objects.equals(this.number, pageMessageBean.number) &&
        Objects.equals(this.sort, pageMessageBean.sort) &&
        Objects.equals(this.size, pageMessageBean.size) &&
        Objects.equals(this.content, pageMessageBean.content) &&
        Objects.equals(this.pageable, pageMessageBean.pageable) &&
        Objects.equals(this.first, pageMessageBean.first) &&
        Objects.equals(this.last, pageMessageBean.last) &&
        Objects.equals(this.numberOfElements, pageMessageBean.numberOfElements) &&
        Objects.equals(this.empty, pageMessageBean.empty);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(totalElements, totalPages, number, sort, size, content, pageable, first, last, numberOfElements, empty);
  }
  
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PageMessageBean {\n");
    
    sb.append("    totalElements: ").append(toIndentedString(totalElements)).append("\n");
    sb.append("    totalPages: ").append(toIndentedString(totalPages)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    pageable: ").append(toIndentedString(pageable)).append("\n");
    sb.append("    first: ").append(toIndentedString(first)).append("\n");
    sb.append("    last: ").append(toIndentedString(last)).append("\n");
    sb.append("    numberOfElements: ").append(toIndentedString(numberOfElements)).append("\n");
    sb.append("    empty: ").append(toIndentedString(empty)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  
}



