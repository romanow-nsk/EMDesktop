/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package romanow.abc.desktop;

import romanow.abc.core.constants.ConstValue;
import romanow.abc.core.constants.ValuesBase;
import romanow.abc.core.entity.Entity;
import romanow.abc.core.entity.EntityList;
import romanow.abc.core.entity.artifacts.Artifact;
import romanow.abc.core.entity.base.HelpFile;
import retrofit2.Call;

/**
 *
 * @author romanow
 */
public class HelpPanel extends BasePanel{
    private EntityBasePanel helpPanel;
    private EntityList<HelpFile> helpFiles = new EntityList<>();
    public HelpPanel() {
        initComponents();
        }
    public void initPanel(MainBaseFrame main0){
        super.initPanel(main0);
        //---------------------------------------------------------------------------------------------------
        helpPanel = new EntityPanelUni(10, 20, helpFiles, "HelpFile", main,true,0,1) {
            @Override
            public void showRecord() {
                HelpFile ctr = (HelpFile) helpPanel.current;
                Title.setText(ctr.getTitle());
                Tags.setText(ctr.getTagList());
                AtrifactFile.setText(ctr.getItemFile().getTitle());                }
            @Override
            public void updateRecord() {
                HelpFile ctr = (HelpFile) helpPanel.current;
                }
        };
        add(helpPanel);
        TagList.removeAll();
        for (ConstValue ss : ValuesBase.title("HelpTopic"))
            TagList.add(ss.title());
        //-----------------------------------------------------------------------------------------

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TagList = new java.awt.Choice();
        jLabel1 = new javax.swing.JLabel();
        Title = new javax.swing.JTextField();
        Tags = new javax.swing.JTextField();
        AtrifactFile = new javax.swing.JTextField();
        AddTag = new javax.swing.JButton();
        RemoveTag = new javax.swing.JButton();
        UploadFile = new javax.swing.JButton();
        DownLoadFile = new javax.swing.JButton();
        Question = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setLayout(null);
        add(TagList);
        TagList.setBounds(80, 60, 120, 20);

        jLabel1.setText("Запрос");
        add(jLabel1);
        jLabel1.setBounds(130, 185, 60, 14);

        Title.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TitleKeyPressed(evt);
            }
        });
        add(Title);
        Title.setBounds(210, 100, 400, 25);

        Tags.setEnabled(false);
        add(Tags);
        Tags.setBounds(210, 60, 400, 25);

        AtrifactFile.setEnabled(false);
        add(AtrifactFile);
        AtrifactFile.setBounds(210, 140, 400, 25);

        AddTag.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drawable/add.png"))); // NOI18N
        AddTag.setBorderPainted(false);
        AddTag.setContentAreaFilled(false);
        AddTag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddTagActionPerformed(evt);
            }
        });
        add(AddTag);
        AddTag.setBounds(40, 55, 30, 30);

        RemoveTag.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drawable/remove.png"))); // NOI18N
        RemoveTag.setBorderPainted(false);
        RemoveTag.setContentAreaFilled(false);
        RemoveTag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveTagActionPerformed(evt);
            }
        });
        add(RemoveTag);
        RemoveTag.setBounds(620, 55, 30, 30);

        UploadFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drawable/upload.png"))); // NOI18N
        UploadFile.setBorderPainted(false);
        UploadFile.setContentAreaFilled(false);
        UploadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadFileActionPerformed(evt);
            }
        });
        add(UploadFile);
        UploadFile.setBounds(620, 140, 40, 30);

        DownLoadFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drawable/download.png"))); // NOI18N
        DownLoadFile.setBorderPainted(false);
        DownLoadFile.setContentAreaFilled(false);
        DownLoadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DownLoadFileActionPerformed(evt);
            }
        });
        add(DownLoadFile);
        DownLoadFile.setBounds(660, 140, 40, 30);

        Question.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                QuestionKeyPressed(evt);
            }
        });
        add(Question);
        Question.setBounds(210, 180, 400, 25);

        jLabel2.setText("Тег");
        add(jLabel2);
        jLabel2.setBounds(10, 60, 60, 14);
    }// </editor-fold>//GEN-END:initComponents

    private void clearView(){
        AtrifactFile.setText("");
        Title.setText("");
        Tags.setText("");
    }
    private void AddTagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddTagActionPerformed
        ((HelpFile)helpPanel.current).addTag(TagList.getSelectedItem());
        helpPanel.updateAction(null);
    }//GEN-LAST:event_AddTagActionPerformed

    private void RemoveTagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveTagActionPerformed
        ((HelpFile)helpPanel.current).removeTag(TagList.getSelectedItem());
        helpPanel.updateAction(null);
    }//GEN-LAST:event_RemoveTagActionPerformed

    private void UploadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadFileActionPerformed
        new UploadPanel(400, 300, "Подсказка",main, new I_OK() {
            @Override
            public void onOK(Entity ent) {
                HelpFile help = (HelpFile)helpPanel.current;
                help.getItemFile().setOidRef((Artifact) ent);
                helpPanel.updateAction(null);
            }
        });
    }//GEN-LAST:event_UploadFileActionPerformed

    private void DownLoadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DownLoadFileActionPerformed
        HelpFile help = (HelpFile)helpPanel.current;
        if (help.getItemFile().getOid()==0)
            return;
        main.loadFile(help.getItemFile().getRef());
    }//GEN-LAST:event_DownLoadFileActionPerformed

    private void TitleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TitleKeyPressed
        if(evt.getKeyCode()!=10) return;
        ((HelpFile)helpPanel.current).setTitle(Title.getText());
        helpPanel.updateAction(evt);
    }//GEN-LAST:event_TitleKeyPressed

    private void QuestionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_QuestionKeyPressed
        if(evt.getKeyCode()!=10) return;
        new APICall<EntityList<HelpFile>>(main){
            @Override
            public Call<EntityList<HelpFile>> apiFun() {
                return main.service.getHelpFileList(Question.getText());
                }
            @Override
            public void onSucess(EntityList<HelpFile> oo) {
                System.out.println(oo.toFullString());
                }
        };
    }//GEN-LAST:event_QuestionKeyPressed

    @Override
    public void refresh() {}

    @Override
    public void eventPanel(int code, int par1, long par2, String par3,Object oo) {
        if (code==EventRefreshSettings){
            refresh();
            main.sendEventPanel(EventRefreshSettingsDone,0,0,"",oo);
            }
    }

    @Override
    public void shutDown() {

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddTag;
    private javax.swing.JTextField AtrifactFile;
    private javax.swing.JButton DownLoadFile;
    private javax.swing.JTextField Question;
    private javax.swing.JButton RemoveTag;
    private java.awt.Choice TagList;
    private javax.swing.JTextField Tags;
    private javax.swing.JTextField Title;
    private javax.swing.JButton UploadFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
