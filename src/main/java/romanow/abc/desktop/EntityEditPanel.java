/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package romanow.abc.desktop;

import com.google.gson.Gson;
import org.jfree.data.Values;
import romanow.abc.core.DBRequest;
import romanow.abc.core.UniException;
import romanow.abc.core.Utils;
import romanow.abc.core.constants.ValuesBase;
import romanow.abc.core.entity.Entity;
import romanow.abc.core.entity.EntityField;
import romanow.abc.core.entity.baseentityes.JEmpty;
import romanow.abc.core.mongo.DAO;
import retrofit2.Call;

import java.awt.*;
import java.util.ArrayList;

/**
 *
 * @author romanow
 */
public class EntityEditPanel extends javax.swing.JFrame {
    private String className;
    private Entity entity;
    private ArrayList<EntityField> data;
    private MainBaseFrame main;
    private ArrayList<TextField> values = new ArrayList<>();
    /**
     * Creates new form EntityEditPanel
     */
    public void refreshValues() {
        for(int i=0;i<data.size();i++)
            values.get(i).setText(data.get(i).value);
        }
    public void refresh(){
        getContentPane().removeAll();
        try {
            data = entity.getDBValues();
            int sz = data.size();
            setBounds(100,100,350*(sz/20+1), (sz>20 ? 20 : sz)*30+70);
            setTitle(className+" ["+entity.getOid()+"]");
            for(int i=0;i<sz;i++){
                final int ii=i;
                EntityField ff = data.get(i);
                int x0 = 20 + 320*(i/20);
                int y0 = 20 + (i%20)*30;
                TextField tt = new TextField();
                tt.setText(ff.name+": "+ DAO.dbTitle[ff.type]);
                tt.setEnabled(false);
                tt.setBounds(x0,y0,150,25);
                getContentPane().add(tt);
                tt = new TextField();
                tt.setText(ff.value);
                tt.setBounds(x0+160,y0,150,25);
                getContentPane().add(tt);
                tt.addKeyListener(new java.awt.event.KeyAdapter() {
                    public void keyPressed(java.awt.event.KeyEvent evt) {
                        if(evt.getKeyCode()!=10) return;
                        final EntityField ff = data.get(ii);
                        final String value = values.get(ii).getText();
                        String ee = entity.updateField(ff,value);
                        if (ee!=null){
                            System.out.println(ee);
                            refreshValues();
                            return;
                        }
                        new OK(200, 200, "Обновить поле " + ff.name + ": " + value, new I_Button() {
                            @Override
                            public void onPush() {
                                new APICall<JEmpty>(main){
                                    @Override
                                    public Call<JEmpty> apiFun() {
                                        return main.service.updateEntityField(main.debugToken, ff.name, new DBRequest(entity, new Gson()));
                                        }
                                    @Override
                                    public void onSucess(JEmpty oo) {
                                        ff.value = value;
                                    }
                                };
                                refreshValues();
                            }
                        });
                        //System.out.println(data.get(ii).name+": "+value);
                    }
                });
                values.add(tt);
                }
            } catch (UniException e) { Utils.printFatalMessage(e); }
        }

    public EntityEditPanel(MainBaseFrame main0, Entity entity0) {
        initComponents();
        entity = entity0;
        main = main0;
        className = entity.getClass().getSimpleName();
        refresh();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents



    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
