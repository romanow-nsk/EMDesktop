/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package romanow.abc.desktop;

import romanow.abc.core.API.RestAPICommon;
import romanow.abc.core.Utils;
import romanow.abc.core.entity.artifacts.Artifact;
import romanow.abc.core.utils.FileNameExt;
import okhttp3.MultipartBody;
import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

/**
 *
 * @author romanow
 */
public class UploadPanel extends javax.swing.JFrame {
    private MainBaseFrame main;
    private I_OK ok;
    private FileNameExt fname=null;
    /**
     * Creates new form UploadPanel
     */
    public UploadPanel(int x, int y, MainBaseFrame main0, I_OK ok0) {
        setTitle("Выгрузка файла");
        initComponents();
        setBounds(x,y,390,130);
        main = main0;
        ok = ok0;
        setVisible(true);
    }
    public UploadPanel(int x, int y, String name, MainBaseFrame main0, I_OK ok0) {
        this(x,y,main0,ok0);
        Name.setText(name);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Name = new javax.swing.JTextField();
        FileSelect = new javax.swing.JButton();
        Save = new javax.swing.JButton();
        FileName = new javax.swing.JTextField();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setText("Название");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 25, 80, 14);
        getContentPane().add(Name);
        Name.setBounds(110, 20, 260, 25);

        FileSelect.setText("Файл");
        FileSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileSelectActionPerformed(evt);
            }
        });
        getContentPane().add(FileSelect);
        FileSelect.setBounds(10, 50, 59, 23);

        Save.setText("Сохранить");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        getContentPane().add(Save);
        Save.setBounds(267, 50, 100, 23);

        FileName.setEnabled(false);
        getContentPane().add(FileName);
        FileName.setBounds(90, 50, 160, 25);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FileSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileSelectActionPerformed
        fname = main.getInputFileName("Выгрузить файл","*",null);
        FileName.setText(fname.fileName());
    }//GEN-LAST:event_FileSelectActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        if (fname==null){
            System.out.println("Файл не выбран");
            return;
            }
        try {
            MultipartBody.Part body2 = RestAPICommon.createMultipartBody(fname);
            Call<Artifact> call3 = main.service.upload(main.debugToken,Name.getText(),fname.fileName(),body2);
            call3.enqueue(new Callback<Artifact>() {
                @Override
                public void onResponse(Call<Artifact> call, Response<Artifact> response) {
                    if (!response.isSuccessful()){
                        System.out.println("Ошибка выгрузки файла  "+ Utils.httpError(response));
                        }
                    else{
                        java.awt.EventQueue.invokeLater(new Runnable() {
                            public void run() {
                                ok.onOK(response.body());
                                dispose();
                                }
                            });
                        }
                    }
                @Override
                public void onFailure(Call<Artifact> call, Throwable ee) {
                    System.out.println("Ошибка сервера: "+ ee.toString());
                    }
            });
        } catch (Exception e) { System.out.println("Ошибка сервера: "+e.toString()); }
    }//GEN-LAST:event_SaveActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField FileName;
    private javax.swing.JButton FileSelect;
    private javax.swing.JTextField Name;
    private javax.swing.JButton Save;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
