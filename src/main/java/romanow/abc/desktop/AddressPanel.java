/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package romanow.abc.desktop;

import retrofit2.Call;
import romanow.abc.core.DBRequest;
import romanow.abc.core.UniException;
import romanow.abc.core.Utils;
import romanow.abc.core.constants.ConstValue;
import romanow.abc.core.constants.ValuesBase;
import romanow.abc.core.entity.Entity;
import romanow.abc.core.entity.EntityList;
import romanow.abc.core.entity.I_Compare;
import romanow.abc.core.entity.baseentityes.JEmpty;
import romanow.abc.core.entity.baseentityes.JLong;
import romanow.abc.core.utils.Address;
import romanow.abc.core.utils.GPSPoint;
import romanow.abc.core.utils.Street;

import java.awt.*;
import java.util.ArrayList;

/**
 *
 * @author romanow
 */
public class AddressPanel extends javax.swing.JFrame {
    private Address addr;
    private I_OK2 ok;
    private MainBaseFrame main;
    private EntityList<Street> ss = new EntityList<>();
    private ListBox street;
    private boolean newObject=false;
    private boolean addMode = false;
    private PopupList popup;
    private void setAddress(){
        ADDRESS.setText(addr.toString());
        HOME.setText(addr.getHome());
        OFFICE.setText(addr.getOffice());
        }
    public AddressPanel(MainBaseFrame main0, boolean addMode0, Address addr0,I_OK2 ok0) {
        initComponents();
        setBounds(220,220,560,150);
        ok = ok0;
        addr = addr0;
        addMode = addMode0;
        if (addr==null) {
            addr = new Address();
            newObject=true;
            }
        if (addr.getOid()==0)
            newObject=true;
        main = main0;
        setTitle("Адрес");
        setVisible(true);
        GPS.setText(addr.getLocation().getTitle());
        for(ConstValue cc : main.homeTypes)
            HOMETYPE.add(cc.title());
        for(ConstValue cc : main.officeTypes)
            OFFICETYPE.add(cc.title());
        new APICall<ArrayList<DBRequest>>((Client)main){
            @Override
            public Call<ArrayList<DBRequest>> apiFun() {
                return main.service.getEntityList(main.debugToken, "Street", ValuesBase.GetAllModeActual,1);
                }
            @Override
            public void onSucess(ArrayList<DBRequest> oo) {
                try {
                    ss.load(oo);
                    ss.sort(new I_Compare() {
                        @Override
                        public int compare(Entity one, Entity two) {
                            return 0;
                        }
                    });
                    setAddress();
                    } catch (UniException e) { System.out.println(Utils.createFatalMessage(e)); }
                }
            };
        street = new ListBox(new Rectangle(20,50,230,20),ss,new I_ListSelected(){
            @Override
            public void onSelect(int idx) {
                selectStreet(idx);
                }
            });
        add(street);
        popup = new PopupList(main, this, 110, 80, 200, 25, ss, new I_ListSelectedFull() {
            @Override
            public void onSelect(long idx,String name) {
                street.select((int)idx);
                selectStreet((int)idx);
                popup.setVisible(false);
                }
            @Override
            public void onCancel() {
                popup.setVisible(false);
                }
            });
        add(popup);
        }
    private GPSPoint gps;
    private void updateGPS(){
        gps = new GPSPoint(GPS.getText(),true);
        if (!gps.isValid()){
            System.out.println("Ошибка формата GPS:"+GPS.getText());
            return;
            }
            new APICall<JLong>((Client)main) {
                @Override
                public Call<JLong> apiFun() {
                    return main.service.setAddressGPS(main.debugToken,addr.getOid(),gps);
                    }
                @Override
                public void onSucess(JLong oo) {
                    gps.setOid(oo.getValue());
                    addr.getLocation().setOidRef(gps);
                    System.out.println("Координаты изменены:"+gps.getTitle());
                    }
            };
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HOMETYPE = new java.awt.Choice();
        HOME = new javax.swing.JTextField();
        OFFICETYPE = new java.awt.Choice();
        OFFICE = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        ADDRESS = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        GPS = new javax.swing.JTextField();
        GPSButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        HOMETYPE.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                HOMETYPEItemStateChanged(evt);
            }
        });
        getContentPane().add(HOMETYPE);
        HOMETYPE.setBounds(270, 45, 80, 20);

        HOME.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                HOMEKeyPressed(evt);
            }
        });
        getContentPane().add(HOME);
        HOME.setBounds(360, 40, 50, 25);

        OFFICETYPE.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                OFFICETYPEItemStateChanged(evt);
            }
        });
        getContentPane().add(OFFICETYPE);
        OFFICETYPE.setBounds(420, 45, 60, 20);

        OFFICE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                OFFICEKeyPressed(evt);
            }
        });
        getContentPane().add(OFFICE);
        OFFICE.setBounds(490, 40, 50, 25);

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(20, 80, 50, 23);
        getContentPane().add(ADDRESS);
        ADDRESS.setBounds(20, 10, 520, 25);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("->");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(80, 85, 34, 14);

        GPS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                GPSKeyPressed(evt);
            }
        });
        getContentPane().add(GPS);
        GPS.setBounds(380, 80, 160, 25);

        GPSButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drawable/map.png"))); // NOI18N
        GPSButton.setBorderPainted(false);
        GPSButton.setContentAreaFilled(false);
        GPSButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GPSButtonActionPerformed(evt);
            }
        });
        getContentPane().add(GPSButton);
        GPSButton.setBounds(340, 80, 30, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        addr.setHome(HOME.getText());
        addr.setOffice(OFFICE.getText());
        if (addMode){
            if (newObject){
                new APICall<JLong>((Client)main){
                    @Override
                    public Call<JLong> apiFun() {
                        return main.service.addEntity(main.debugToken,new DBRequest(addr,main.gson),0);
                        }
                    @Override
                    public void onSucess(JLong oo) {
                        addr.setOid(oo.getValue());
                        ok.onOK(addr);
                        }
                    };
                }
            else{
                new APICall<JEmpty>((Client)main){
                    @Override
                    public Call<JEmpty> apiFun() {
                        return main.service.updateEntity(main.debugToken,new DBRequest(addr,main.gson));
                        }

                    @Override
                    public void onSucess(JEmpty oo) {
                        ok.onOK(addr);
                        }
                    };
                }
            }
        else{
            ok.onOK(addr);
            }
            dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    //private void selectCity(int idx){
    //    addr.setCity(zz.get(idx).getName());
    //    addr.setType(addr.getType() & ~0x0F | zz.get(idx).cityType());
    //    setAddress();
    //}

    private void selectStreet(int idx){
        addr.getStreet().setOidRef(ss.get(idx));
        setAddress();
        }

    private void HOMETYPEItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_HOMETYPEItemStateChanged
        addr.setType(addr.getType() & ~0x0F00 | main.homeTypes.get(HOMETYPE.getSelectedIndex()).value());
        setAddress();
    }//GEN-LAST:event_HOMETYPEItemStateChanged

    private void OFFICETYPEItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_OFFICETYPEItemStateChanged
        addr.setType(addr.getType() & ~0x0F000 | main.officeTypes.get(OFFICETYPE.getSelectedIndex()).value());
        setAddress();
    }//GEN-LAST:event_OFFICETYPEItemStateChanged

    private void HOMEKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HOMEKeyPressed
        if(evt.getKeyCode()!=10) return;
        addr.setHome(HOME.getText());
        setAddress();
        }//GEN-LAST:event_HOMEKeyPressed

    private void OFFICEKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_OFFICEKeyPressed
        if(evt.getKeyCode()!=10) return;
        addr.setOffice(OFFICE.getText());
        setAddress();
    }//GEN-LAST:event_OFFICEKeyPressed

    private void GPSKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GPSKeyPressed
        if(evt.getKeyCode()!=10) return;
        updateGPS();
    }//GEN-LAST:event_GPSKeyPressed

    private void GPSButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GPSButtonActionPerformed
        updateGPS();
    }//GEN-LAST:event_GPSButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ADDRESS;
    private javax.swing.JTextField GPS;
    private javax.swing.JButton GPSButton;
    private javax.swing.JTextField HOME;
    private java.awt.Choice HOMETYPE;
    private javax.swing.JTextField OFFICE;
    private java.awt.Choice OFFICETYPE;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
